version: '2.4'

volumes:
  public:
    driver: local

services:
#  test:
#    build:
#      context: .
#      dockerfile: Dockerfile
#      target: test
#    container_name: test

  release:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DJANGO_SETTINGS_MODULE: money-boy.settings_release
      DB_HOST: postgres
      DB_NAME: app
      DB_USER: postgres
      DB_PASS: supersecretpassword
    container_name: release

  app:
    extends:
      service: release
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - public:/public
      - ./src:/app
    expose:
      - "8001"
    command: uwsgi --ini /app/money-boy/django.ini
    container_name: app

  api:
    build:
      context: .
      dockerfile: "./Dockerfile-golang"
    ports:
      - "8080:8080"
    container_name: api
    depends_on:
      - mysql
    volumes:
      - ./api:/go/src/github.com/ono5/money-boys/api

  frontend:
      build:
        context: .
        dockerfile: "./Dockerfile-nodejs"
      volumes:
        - ./frontend:/frontend
      command: >
        sh -c "cd frontend && yarn start"
      ports:
        - "3000:3000"
      container_name: frontend
      depends_on:
        - app
        - api
      stdin_open: true

  migrate:
    extends:
      service: release
    depends_on:
      postgres:
        condition: service_healthy
    command:
      - python3
      - manage.py
      - migrate
      - --no-input
    container_name: migrate

  postgres:
    image: postgres:10-alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword
    container_name: postgres

  mysql:
      image: mysql:5.7.22
      environment:
          MYSQL_ROOT_PASSWORD: admin
          MYSQL_USER: admin
          MYSQL_PASSWORD: admin
          MYSQL_DATABASE: money-boys
      ports:
        - "3306:3306"
      container_name: mysql
      volumes:
        - ./mysql/data:/var/lib/mysql
        - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
        - ./mysql/sql:/docker-entrypoint-initdb.d

  phpmyadmin:
      image: phpmyadmin/phpmyadmin
      environment:
          - PMA_ARBITRARY=1
          - PMA_HOST=mysql
          - PMA_USER=admin
          - PMA_PASSWORD=admin
      links:
          - mysql
      ports:
          - 8888:80
      volumes:
          - /sessions
      container_name: phpmyadmin

  nginx:
    image: nginx:1.15.9-alpine
    ports:
      - "80:80"
    volumes:
      - public:/public
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/uwsgi_params:/etc/nginx/uwsgi_params
      - ./nginx/log:/var/log/nginx
    container_name: nginx

  redis:
    image: redis:3.0
    container_name: redis
